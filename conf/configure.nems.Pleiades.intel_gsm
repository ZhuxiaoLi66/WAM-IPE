## NEMS configuration file
##
## Platform: Pleiades
## Compiler: Intel with IntelMPI

SHELL           = /bin/sh

################################################################################
## Include the common configuration parts

include         $(TOP)/conf/configure.nems.NUOPC

###################### PHYS_MODE ##### CHEM_MODE ###############################
#
#    
#

PHYS_MODE	= compile
CHEM_MODE	= compile
ifeq ($(PHYS_MODE),compile)
       PHYS_LIB = $(TOP)/atmos/gsm/gsmphys
       PHYS_INC = $(TOP)/atmos/gsm/gsmphys
       PHYS_DIR = $(TOP)/atmos/gsm/gsmphys
endif
ifeq ($(CHEM_MODE),compile)
        CHEM_LIB = $(TOP)/chem
        CHEM_INC = $(TOP)/chem/gocart/src/Config/
        CHEM_DIR = $(TOP)/chem
       CHEM_MOD = $(TOP)/chem/gocart/${ARCH}/include
      ESMADIR = chem/gocart
endif


################################################################################
## Other settings

LIBDIR=/nobackupp8/dtkleist/save/ncep/nwprod/lib
PARADIR=/nobackupp8/dtkleist/save/supplibs/lib
POSTDIR=/nobackupp8/akubaryk/save/gfs/Q1FY15/projects/post/sorc/ncep_post.fd
CRTMDIR=/nobackupp8/dtkleist/save/crtm/CRTM_REL-2.2.1/crtm_v2.2.1/lib

NETCDF_INC   = -I${NETCDF}/include
NETCDF_LIB   = -L${NETCDF}/lib -lnetcdf -lnetcdff

SYS_LIB      =
 
EXTLIBS      = $(NEMSIO_LIB) $(BACIO_LIB4) $(W3NCO_LIBd) $(W3EMC_LIBd) $(SP_LIBd) $(NETCDF_LIB) $(ESMF_LIB) $(SYS_LIB) -lm

## for the post quilting option
POSTMOD     = ${POSTDIR}/incmod/post_4
POST_INC    = -I${POSTDIR}/incmod/post_4
POST_LIB    = -L${POSTDIR} -lnceppost
W3_POST_LIB = -L${LIBDIR}  -lw3nco_4 -lw3emc_4
CRTM_LIB    = -L${CRTMDIR} -lcrtm
G2_LIB      =  -L${LIBDIR} -lg2tmpl -lg2_4  -L${PARADIR} -ljasper -lpng -lz
XML_LIB     = -L${LIBDIR} -lxmlparse
SIGIO_LIB   = -L${LIBDIR} -lsigio_4
SFCIO_LIB   = -L${LIBDIR} -lsfcio

EXTLIBS_POST = $(NEMSIO_LIB)  \
               $(POST_LIB)    \
               $(W3_POST_LIB) \
               $(XML_LIB)     \
               $(G2_LIB)      \
               $(BACIO_LIB)   \
               $(SIGIO_LIB)   \
               $(SFCIO_LIB)   \
               $(SP_LIB)      \
               $(CRTM_LIB)    \
               $(ESMF_LIB)    \
               $(NETCDF_LIB)  \
               $(SYS_LIB)
###
FC          = ifort -lmpi -xSSE4.2 -g -qopenmp -mkl=sequential -align array32byte -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -convert big_endian -assume byterecl -mkl=sequential
F77         = ifort -lmpi -xSSE4.2 -g -qopenmp -mkl=sequential -align array32byte -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -convert big_endian -assume byterecl -mkl=sequential
FREE         = -free
FIXED        = -fixed
R8           = -r8

FINCS        = $(ESMF_INC) -I$(NEMSIO_INC) $(NETCDF_INC)
#TRAPS        = -g -fno-inline -no-ip -traceback -ftrapuv -fpe0 -ftz -check all -check noarg_temp_created -fp-stack-check

FFLAGS       = $(TRAPS) $(FINCS) -fp-model strict

OPTS_NMM     = -g -fno-inline -no-ip -traceback -ftrapuv -fpe0 -ftz -check all -check noarg_temp_created -fp-stack-check
OPTS_GFS     = -O3
#OPTS_GFS     = -O0 -g -traceback
OPTS_GEN     = -O3
OPTS_FIM     = -O3

FFLAGM_DEBUG =

FFLAGS_NMM   = $(OPTS_NMM) $(FFLAGS)
FFLAGS_GFS   = $(OPTS_GFS) $(FFLAGS) $(FREE)
FFLAGS_GFSF  = $(OPTS_GFS) $(FFLAGS) $(FIXED)
FFLAGS_GEN   = $(OPTS_GEN) $(FFLAGS)
FFLAGS_FIM   = $(OPTS_FIM) $(FFLAGS)

FPP          = -fpp
CPP          = /lib/cpp -P -traditional
CPPFLAGS     = -DENABLE_SMP -DCHNK_RRTM=8 -DNEMS_GSM

AR           = ar
ARFLAGS      = -r

RM           = rm
